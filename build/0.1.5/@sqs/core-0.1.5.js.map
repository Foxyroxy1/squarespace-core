{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3de3fd60895441fcaf8f","webpack:///./src/index.js","webpack:///./src/ImageLoader.js","webpack:///./src/Lifecycle.js","webpack:///./src/Tweak.js"],"names":["SQS","ImageLoader","Lifecycle","Tweak","load","img","config","window","init","Squarespace","AFTER_BODY_LOADED","afterBodyLoad","destroy","globalDestroy","Y","tweaksToWatch","all","callbacks","getValue","name","console","error","Template","getTweakValue","watch","arguments","length","push","tweakName","constructor","Array","forEach","Global","on","e","getName","callbackSignature","value","callback","err"],"mappings":"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","file":"@sqs/core-0.1.5.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SQS\"] = factory();\n\telse\n\t\troot[\"SQS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3de3fd60895441fcaf8f\n **/","import ImageLoader from './ImageLoader';\nimport Lifecycle from './Lifecycle';\nimport Tweak from './Tweak';\n\n/**\n * The public JavaScript API for Squarespace template developers.\n * @namespace SQS\n */\nconst SQS = {\n  ImageLoader,\n  Lifecycle,\n  Tweak\n};\n\nexport default SQS;\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * ​Squarespace comes with a number of built-in facilities for managing images\n * that are uploaded to our system. After uploading an image into a collection,\n * Squarespace automatically creates multiple copies of the image with different \n * sizes. Our ImageLoader will then help render images properly when they are\n * presented on a page, even on retina displays.\n *\n * ImageLoader can also be used to fit or fill an image inside ​a parent\n * container, where it automatically determines which image size to use\n * depending on the current dimensions of the container.\n *\n * WARNING:\n * Currently, ImageLoader is present on all Squarespace sites under the global\n * namespace ImageLoader, but this is an unsupported API and we recommend\n * accessing this functionality through squarespace-core.\n *\n * @namespace ImageLoader\n */\nconst ImageLoader = {\n\n  /**\n   * Using the global ImageLoader namespace, calls ImageLoader.load on the\n   * given node with the given config options.\n   *\n   * @method load\n   * @param  {HTMLElement} img    Image node to be loaded\n   * @param  {Object} config      Config object\n   * @return {Boolean}            True if the image was loaded, false otherwise\n   */\n  load(img, config) {\n    return window.ImageLoader.load(img, config);\n  }\n};\n\n/**\n * @exports {Object} ImageLoader\n */\nexport default ImageLoader;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ImageLoader.js\n **/","/**\n * Squarespace provides default functionality for some content that users add\n * in the CMS.\n *\n * If you are building a Developer Platform site that loads Squarespace content\n * through an XHR or some other kind of AJAX, you can use the Lifecycle methods\n * provided here to initialize and/or destroy this functionality.\n *\n * WARNING:\n * The functionality called by Lifecycle is available on the global namespace\n * window.Squarespace, but this is an unsupported API and it is highly\n * recommended that you access it through squarespace-core.\n *\n * @namespace Lifecycle\n */\nconst Lifecycle = {\n\n  /**\n   * Squarespace.afterBodyLoad() trigger loads scripts and calls onInitialize,\n   * which individual modules' init functions are bound to. This should be\n   * called after new HTML content containing Squarespace default functionality\n   * is added to a page (for example, after AJAX loading a new page).\n   *\n   * @method init\n   */\n  init() {\n    window.Squarespace.AFTER_BODY_LOADED = false;\n    window.Squarespace.afterBodyLoad();\n  },\n\n  /**\n   * Squarespace.globalDestroy calls onDestroy, triggering each module's\n   * destructor. This should be called prior to loading in new HTML content\n   * containing Squarespace default functionality.\n   *\n   * @method  destroy\n   */\n  destroy() {\n    window.Squarespace.globalDestroy(Y);\n  }\n\n};\n\n/**\n * @exports {Object} Lifecycle\n */\nexport default Lifecycle;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Lifecycle.js\n **/","/**\n * @const {Object} tweaksToWatch\n */\nconst tweaksToWatch = {\n  all: {\n    callbacks: []\n  }\n};\n\n/**\n * Tweaks allow a developer to isolate specific elements of the design and\n * present options to the user in an easy-to-use interface. Tweaks are surfaced\n * in the Squarespace interface through Style Editor (e.g.\n * yoursite.squarespace.com/config/design/style). Using tweaks, a user can make\n * presentational changes to their website without having to know or edit CSS code.\n *\n * Tweaks are typically used by the developers through LESS variables, mixins,\n * and class names added to the <body> element.\n * \n * Sometimes, a developer may find it necessary to access the value of a tweak\n * through Javascript, or to watch for changes in that tweak and update the DOM\n * accordingly. The Tweak module of squarespace-core is meant to provide an\n * official interface for doing so.\n *\n * @namespace Tweak\n */\nconst Tweak = {\n\n  /**\n   * Gets the value of one of the tweaks given its name.\n   *\n   * @method getValue\n   * @param {String} name      Name of the tweak\n   * @returns {String}         The value of the tweak\n   */\n  getValue(name) {\n    if (!name || typeof name !== 'string') {\n      console.error('squarespace-core: Invalid tweak name ' + name);\n      return null;\n    }\n\n    return Y.Squarespace.Template.getTweakValue(name);\n  },\n\n  /**\n   * Listen for changes on a tweak item. If one parameter is provided, the\n   * callback will be executed every time any tweak changes. If two parameters\n   * are provided and the first parameter is a String, the callback will be\n   * executed only when that particular tweak changes. If two parameters are\n   * provided and the first parameter is an Array of strings, the callback will\n   * be executed any time one of those tweaks changes.\n   *\n   * @method watch\n   * @param {String}          Optional: Name of the tweak\n   * @param {Array}           Optional: Array with multiple tweak names\n   * @param {Function}        Callback to call when watcher is triggered\n   */\n  watch: function () {\n    if (arguments.length === 0) {\n      console.error('squarespace-core: ' +\n        'Tweak.watch must be called with at least one parameter');\n      return;\n    }\n\n    if (arguments.length === 1) {\n      // Only callback passed in, no tweak name string or tweaks array passed.\n      // Run callback for all tweaks.\n      if (typeof arguments[0] === 'function') {\n        tweaksToWatch.all.callbacks.push(arguments[0]);\n      }\n      return;\n    }\n\n    if (typeof arguments[0] === 'string' && typeof arguments[1] === 'function') {\n      // Specific tweak name passed in. Run callback when that tweak is changed.\n      const tweakName = arguments[0];\n      if (!tweaksToWatch[tweakName]) {\n        tweaksToWatch[tweakName] = {\n          callbacks: []\n        };\n      }\n      tweaksToWatch[tweakName].callbacks.push(arguments[1]);\n    } else if (arguments[0].constructor === Array && typeof arguments[1] === 'function') {\n      // Multiple tweak names passed in as array. Run callback when any one of\n      // those tweaks are changed.\n      arguments[0].forEach((tweakName) => {\n        if (!tweaksToWatch[tweakName]) {\n          tweaksToWatch[tweakName] = {\n            callbacks: []\n          };\n        }\n        tweaksToWatch[tweakName].callbacks.push(arguments[1]);\n      });\n    }\n  }\n};\n\nif (window.Y.Global) {\n  // If Y.Global is present on the page, set up the tweak event listener.\n  window.Y.Global.on('tweak:change', (e) => {\n    const tweakName = e.getName();\n    const callbackSignature = {\n      name: tweakName,\n      value: e.config && e.config.value || e.value\n    };\n\n    if (tweaksToWatch[tweakName]) {\n      tweaksToWatch[tweakName].callbacks.forEach((callback) => {\n        try {\n          callback(callbackSignature);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n    }\n\n    if (tweaksToWatch.all.callbacks.length > 0) {\n      tweaksToWatch.all.callbacks.forEach((callback) => {\n        try {\n          callback(callbackSignature);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n    }\n  });\n}\n\n/**\n * @exports {Object} Tweak\n */\nexport default Tweak;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Tweak.js\n **/"],"sourceRoot":""}